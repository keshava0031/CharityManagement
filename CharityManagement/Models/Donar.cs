//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CharityManagement.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Web.Mvc;
   [MetadataType(typeof(DonarMetaData))]
    public partial class Donar
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Donar()
        {
            this.Donations = new HashSet<Donation>();
        }
        [Display(Name ="Donar ID")]
        public string DId { get; set; }
        [Display(Name ="Donar Name")]
        [Required(ErrorMessage ="Donar Name is Required")]
        public string DName { get; set; }
        [Required(ErrorMessage ="Phone Number is Required")]
        [RegularExpression("[6-9]{1}[0-9]{9}",ErrorMessage ="Invalid Phone Number")]
        [DataType(DataType.PhoneNumber)]
        public string Phone { get; set; }
        [Required(ErrorMessage ="Address can't be Empty")]
        public string Address { get; set; }
        [Required(ErrorMessage ="Username can't be Empty")]
        [DataType(DataType.EmailAddress)]
        [Remote("IsUserNameAvailable", "Donar", ErrorMessage = "Username Already Exists!")]
        public string Username { get; set; }
        [Required(ErrorMessage ="Password can't be empty")]
        [DataType(DataType.Password)]
        public string Password { get; set; }
        [NotMapped]
        [DataType(DataType.Password)]
        [System.ComponentModel.DataAnnotations.Compare("Password",ErrorMessage ="Passwords do not match")]
        public string ConfirmPassword { get; set; }


        public virtual LoginDetail LoginDetail { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Donation> Donations { get; set; }
    }

    public class DonarMetaData
    {
        [Remote("IsUserNameAvailable","Donar",ErrorMessage ="Username Already Exists!")]
        public string Username { get; set; }
    }
}
